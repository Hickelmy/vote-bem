<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="/stylesheets/graphs.css">
    <title>ChartJs</title>
</head>

<body>
    <div class="container">
        <canvas id='chart'></canvas>

    </div>
    <script src='/node/chart.js/dist/chart.min.js'></script>

    <script>
        const ctx = document.getElementById('chart').getContext('2d');

        constchart = new Chart(ctx, {

            type: 'doughnut',

            data: {
                labels: [<%=numeros%>],
                datasets: [{
                    label: "Candidatos",
                    backgroundColor: [
                        'rgba(0, 255, 0, 1)',
                        'rgba(255, 0, 0, 1)',
                        'rgba(255, 255, 0, 1)',
                        'rgba(255, 115, 0, 1)',

                    ],
                    borderColor: [
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                        'rgba(0, 0, 0, 1)',
                    ],
                    data:  [<%=votos%>],
                }]
            },
            // Configuration options go here
            options: {
                animation: {
                    duration: 2000,
                    easing: 'easeOutBounce'
                },
                layout: {
                    padding: {
                        left: 20,
                        right: 20,
                        top: 20,
                        bottom: 20
                    }
                },
                legend: {
                    display: true,
                    position: 'bottom'
                },
                title: {
                    display: true,
                    text: 'Candidatos',
                    fontSize: 20
                },
                tooltips: {
                    enabled: true,
                    intersect: true,
                    backgroundColor: 'rgba(41, 128, 185,0.8)'
                },

            }
        });

        /*
        const addData = () => {
            let sizeData = chart.data.datasets[0].data.length
            chart.data.datasets[0].data[sizeData] = Math.random() * 100
            chart.data.labels[sizeData] = `New Data ${sizeData + 1}`
            chart.update()
        }
        
        const removeData = () => {
            chart.data.datasets[0].data.pop()
            chart.data.labels.pop()
            chart.update()
        }
        */
    </script>
    <!-- <script src="/js/graphs.js"></script> -->

</body>

</html>